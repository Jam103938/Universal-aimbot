local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

-- Configuration
local AimSettings = {
    AimEnabled = false,
    TracersEnabled = false,
    ESPEnabled = false,
    FastBulletsEnabled = false,
    TargetPart = "Head"
}

-- Functions
local function IsValidTarget(player)
    return player and player.Character and player.Character:FindFirstChild(AimSettings.TargetPart) and player.Character:FindFirstChildOfClass("Humanoid").Health > 0
end

local function IsVisible(target)
    local localPlayer = game:GetService("Players").LocalPlayer
    if not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then return false end

    local origin = localPlayer.Character.HumanoidRootPart.Position
    local targetPosition = target.Character[AimSettings.TargetPart].Position
    local ray = Ray.new(origin, (targetPosition - origin).unit * 1000)
    local part = workspace:FindPartOnRayWithIgnoreList(ray, {localPlayer.Character})

    return part and part:IsDescendantOf(target.Character)
end

local function GetClosestPlayer()
    local players = game:GetService("Players")
    local localPlayer = players.LocalPlayer
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and IsValidTarget(player) and IsVisible(player) then
            local isTeammate = player.Team and localPlayer.Team and player.Team == localPlayer.Team
            if isTeammate then
                continue
            end

            local distance = (player.Character[AimSettings.TargetPart].Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

local function AimAt(target)
    if not IsValidTarget(target) then return end

    local camera = game:GetService("Workspace").CurrentCamera
    local targetPosition = target.Character[AimSettings.TargetPart].Position

    local direction = (targetPosition - camera.CFrame.Position).unit
    local targetCFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + direction)

    camera.CFrame = targetCFrame
end

local function DrawTracer(fromPosition, toPosition)
    local tracerLine = Drawing.new("Line")
    tracerLine.From = fromPosition
    tracerLine.To = toPosition
    tracerLine.Color = Color3.fromRGB(255, 0, 0)
    tracerLine.Thickness = 2
    tracerLine.Transparency = 1

    return tracerLine
end

local function DrawESP(target)
    if not IsValidTarget(target) then return end

    local box = Drawing.new("Square")
    box.Thickness = 2
    box.Color = Color3.fromRGB(0, 255, 0)
    box.Transparency = 1
    box.Filled = false

    local camera = game:GetService("Workspace").CurrentCamera
    local character = target.Character
    local targetPosition = camera:WorldToViewportPoint(character[AimSettings.TargetPart].Position)
    local rootPosition = camera:WorldToViewportPoint(character.HumanoidRootPart.Position)
    local legPosition = camera:WorldToViewportPoint(character.HumanoidRootPart.Position - Vector3.new(0, 3, 0))

    box.Size = Vector2.new(1000 / rootPosition.Z, (legPosition.Y - targetPosition.Y) / 2)
    box.Position = Vector2.new(targetPosition.X - box.Size.X / 2, targetPosition.Y - box.Size.Y / 2)

    return box
end

local activeTracers = {}
local activeESP = {}

local function ClearTracers()
    for _, tracer in pairs(activeTracers) do
        tracer:Remove()
    end
    activeTracers = {}
end

local function ClearESP()
    for _, esp in pairs(activeESP) do
        esp:Remove()
    end
    activeESP = {}
end

local function GetAllEnemies()
    local enemies = {}
    local players = game:GetService("Players")
    local localPlayer = players.LocalPlayer

    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and IsValidTarget(player) then
            local isTeammate = player.Team and localPlayer.Team and player.Team == localPlayer.Team
            if not isTeammate then
                table.insert(enemies, player)
            end
        end
    end

    return enemies
end

-- Fast Bullets Function
local function EnableFastBullets(enabled)
    if enabled then
        -- Example: Increase bullet speed or adjust handling
        -- This part will depend on the specific game mechanics
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 50
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 100
    else
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
    end
end

-- GUI
local Window = OrionLib:MakeWindow({Name = "Advanced Aimbot", HidePremium = false, SaveConfig = true, ConfigFolder = "AdvancedAimbot"})

local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AimbotTab:AddToggle({
    Name = "Enable Aimbot",
    Default = false,
    Callback = function(Value)
        AimSettings.AimEnabled = Value
    end
})

AimbotTab:AddToggle({
    Name = "Enable Tracers",
    Default = false,
    Callback = function(Value)
        AimSettings.TracersEnabled = Value
        if not Value then
            ClearTracers()
        end
    end
})

AimbotTab:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(Value)
        AimSettings.ESPEnabled = Value
        if not Value then
            ClearESP()
        end
    end
})

AimbotTab:AddDropdown({
    Name = "Target Part",
    Default = "Head",
    Options = {"Head", "HumanoidRootPart"},
    Callback = function(Value)
        AimSettings.TargetPart = Value
    end
})

AimbotTab:AddToggle({
    Name = "Enable Fast Bullets",
    Default = false,
    Callback = function(Value)
        AimSettings.FastBulletsEnabled = Value
        EnableFastBullets(Value)
    end
})

-- Main Loop
game:GetService("RunService").RenderStepped:Connect(function()
    if AimSettings.AimEnabled or AimSettings.TracersEnabled or AimSettings.ESPEnabled then
        local localPlayer = game:GetService("Players").LocalPlayer
        if not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
        
        local closestPlayer = GetClosestPlayer()
        if closestPlayer and AimSettings.AimEnabled then
            AimAt(closestPlayer)
        end

        if AimSettings.TracersEnabled then
            ClearTracers()
            local enemies = GetAllEnemies()
            for _, enemy in ipairs(enemies) do
                if IsValidTarget(enemy) and IsVisible(enemy) then
                    local fromPosition = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(localPlayer.Character.HumanoidRootPart.Position)
                    local toPosition = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(enemy.Character[AimSettings.TargetPart].Position)
                    table.insert(activeTracers, DrawTracer(fromPosition, toPosition))
                end
            end
        end

        if AimSettings.ESPEnabled then
            ClearESP()
            local enemies = GetAllEnemies()
            for _, enemy in ipairs(enemies) do
                if IsValidTarget(enemy) then
                    table.insert(activeESP, DrawESP(enemy))
                end
            end
        end
    else
        ClearTracers()
        ClearESP()
    end
end)

OrionLib:Init()
